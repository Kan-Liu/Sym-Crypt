{"version":3,"sources":["symCrypt.js","App.tsx","serviceWorker.js","index.js"],"names":["Base64","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","i","_utf8_encode","length","charCodeAt","isNaN","charAt","decode","replace","indexOf","String","fromCharCode","_utf8_decode","str","utftext","n","c","string","c2","c3","hashCode","hash","Math","abs","crypt_symmetric","key","newMe","me","Number","split","map","apply","undefined","exports","symEncrypt","myString","myKey","unescape","encodeURIComponent","symDecrypt","encrypted","decodeURIComponent","escape","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toEncrypt","myEnKey","toDecrypt","myDeKey","showAlert","strToShow","strHeading","alertType","handleSubmit","bind","assertThisInitialized","handleEncrypt","handleDecrypt","handleClickDecrypt","handleEncryptKey","handleDecryptKey","handleClickEncrypt","handleCloseAlert","event","preventDefault","setState","target","value","symCrypt","decrypted","e","react_default","a","createElement","className","Alert_default","show","variant","onClose","dismissible","Heading","Form_default","name","onSubmit","Group","controlId","Label","Control","onChange","placeholder","style","width","height","type","Button_default","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d189217.chunk.js","sourcesContent":["/* Encryption code beigns here */\n// Format conversion\n\nfunction normalise_to_ascii(input) {\n  return unescape(encodeURIComponent(input));\n}\nfunction normalise_to_unicode(input) {\n  return decodeURIComponent(escape(input));\n}\n//Encoding and decoding from and to base 64\nvar Base64 = {\n  // private property\n  _keyStr: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n  // public method for encoding\n  encode: function(input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = Base64._utf8_encode(input);\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output =\n        output +\n        Base64._keyStr.charAt(enc1) +\n        Base64._keyStr.charAt(enc2) +\n        Base64._keyStr.charAt(enc3) +\n        Base64._keyStr.charAt(enc4);\n    }\n    return output;\n  },\n  // public method for decoding\n  decode: function(input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    // eslint-disable-next-line\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    while (i < input.length) {\n      enc1 = Base64._keyStr.indexOf(input.charAt(i++));\n      enc2 = Base64._keyStr.indexOf(input.charAt(i++));\n      enc3 = Base64._keyStr.indexOf(input.charAt(i++));\n      enc4 = Base64._keyStr.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      output = output + String.fromCharCode(chr1);\n      // eslint-disable-next-line\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n      // eslint-disable-next-line\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n    output = Base64._utf8_decode(output);\n    return output;\n  },\n  // private method for UTF-8 encoding\n  _utf8_encode: function(str) {\n    str = str.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n    for (var n = 0; n < str.length; n++) {\n      var c = str.charCodeAt(n);\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if (c > 127 && c < 2048) {\n        utftext += String.fromCharCode((c >> 6) | 192);\n        utftext += String.fromCharCode((c & 63) | 128);\n      } else {\n        utftext += String.fromCharCode((c >> 12) | 224);\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n        utftext += String.fromCharCode((c & 63) | 128);\n      }\n    }\n    return utftext;\n  },\n  // private method for UTF-8 decoding\n  _utf8_decode: function(utftext) {\n    var string = \"\";\n    var i = 0;\n    var c = 0;\n\n    var c2 = 0;\n    var c3 = 0;\n    while (i < utftext.length) {\n      c = utftext.charCodeAt(i);\n      if (c < 128) {\n        string += String.fromCharCode(c);\n        i++;\n      } else if (c > 191 && c < 224) {\n        c2 = utftext.charCodeAt(i + 1);\n        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n        i += 2;\n      } else {\n        c2 = utftext.charCodeAt(i + 1);\n        c3 = utftext.charCodeAt(i + 2);\n        string += String.fromCharCode(\n          ((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n        );\n        i += 3;\n      }\n    }\n    return string;\n  }\n};\n// Hashing the key(string) into a 32-bit integer\nfunction hashCode(input) {\n  var hash = 0,\n    i,\n    chr;\n  if (input.length === 0) return hash;\n  for (i = 0; i < input.length; i++) {\n    chr = input.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return Math.abs(hash);\n}\n// The main encryption method which takes an optional numeric key\n// This encryption is symmetric so passing the encrypted string into the method again with the same encryption key will decrypt it\nfunction crypt_symmetric(input, key) {\n  var me = input; //unlink reference\n  key = Number(String(Number(key))) === key ? Number(key) % 128 : 13; //optionaly provide key for symmetric-like-\"\"encryption\"\".\n  var newMe;\n  newMe = me\n    .split(\"\") //to array of characters.\n    .map(function(c) {\n      return c.charCodeAt(0);\n    }) //to array of numbers (each is character's ASCII value)\n    .map(function(i) {\n      return i ^ key;\n    }); //XOR \"\"ENCRYPTION\"\"\n  me = String.fromCharCode.apply(undefined, newMe); //one-liner trick: array-of-numbers to array-of-characters (ASCII value), join to single string. may result in buffer-overflow on long string!\n  return me;\n}\n/* The exported encryption function */\nfunction symEncrypt(myString, myKey) {\n  return Base64.encode(\n    crypt_symmetric(normalise_to_ascii(myString), hashCode(myKey))\n  );\n}\nexports.symEncrypt = symEncrypt;\n/* The exported decryption function */\nfunction symDecrypt(encrypted, myKey) {\n  return crypt_symmetric(\n    normalise_to_unicode(Base64.decode(encrypted)),\n    hashCode(myKey)\n  );\n}\nexports.symDecrypt = symDecrypt;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport * as symCrypt from \"./symCrypt\";\nimport \"./App.css\";\n\ninterface State {\n  toEncrypt: string;\n  myEnKey: string;\n  toDecrypt: string;\n  myDeKey: string;\n  showAlert: boolean;\n  strToShow: string;\n  strHeading: string;\n  alertType: \"success\" | \"danger\";\n}\n\nclass App extends Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEncrypt = this.handleEncrypt.bind(this);\n    this.handleDecrypt = this.handleDecrypt.bind(this);\n    this.handleClickDecrypt = this.handleClickDecrypt.bind(this);\n    this.handleEncryptKey = this.handleEncryptKey.bind(this);\n    this.handleDecryptKey = this.handleDecryptKey.bind(this);\n    this.handleClickEncrypt = this.handleClickEncrypt.bind(this);\n    this.handleCloseAlert = this.handleCloseAlert.bind(this);\n  }\n\n  state: State = {\n    toEncrypt: \"\",\n    myEnKey: \"\",\n    toDecrypt: \"\",\n    myDeKey: \"\",\n    showAlert: false,\n    strToShow: \"\",\n    strHeading: \"\",\n    alertType: \"success\"\n  };\n\n  handleSubmit(event: any) {\n    event.preventDefault();\n  }\n\n  handleEncrypt(event: any) {\n    this.setState({\n      toEncrypt: event.target.value\n    });\n  }\n\n  handleDecrypt(event: any) {\n    this.setState({\n      toDecrypt: event.target.value\n    });\n  }\n\n  handleEncryptKey(event: any) {\n    this.setState({\n      myEnKey: event.target.value\n    });\n  }\n\n  handleDecryptKey(event: any) {\n    this.setState({\n      myDeKey: event.target.value\n    });\n  }\n\n  handleClickEncrypt(event: any) {\n    const encrypted = symCrypt.symEncrypt(\n      this.state.toEncrypt,\n      this.state.myEnKey\n    );\n\n    this.setState({\n      showAlert: true,\n      strHeading: \"Your encrypted string\",\n      strToShow: encrypted,\n      alertType: \"success\"\n    });\n  }\n\n  handleClickDecrypt(event: any) {\n    try {\n      const decrypted = symCrypt.symDecrypt(\n        this.state.toDecrypt,\n        this.state.myDeKey\n      );\n\n      this.setState({\n        showAlert: true,\n        strHeading: \"Your decrypted string\",\n        strToShow: decrypted,\n        alertType: \"success\"\n      });\n    } catch (e) {\n      this.setState({\n        showAlert: true,\n        strHeading: \"Error\",\n        strToShow: \"Please enter a valid Sym-Encrypted string to decrypt!\",\n        alertType: \"danger\"\n      });\n    }\n  }\n\n  handleCloseAlert() {\n    this.setState({\n      showAlert: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <Alert\n          className=\"Main-Alert\"\n          show={this.state.showAlert}\n          variant={this.state.alertType}\n          onClose={this.handleCloseAlert}\n          dismissible\n        >\n          <Alert.Heading className=\"Alert-Heading\">\n            {this.state.strHeading}\n          </Alert.Heading>\n          <p>{this.state.strToShow}</p>\n        </Alert>\n        Sym-Crypt\n        <br />\n        <header className=\"App-header3\">\n          <Form name=\"Sym-Crypt Form\" onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formToEncrypt\">\n              <Form.Label>String to be encrypted</Form.Label>\n              <Form.Control\n                onChange={this.handleEncrypt}\n                placeholder=\"Enter your string to encrypt\"\n                style={{ width: \"410px\", height: \"30px\" }}\n                type=\"text\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formEncryptKey\">\n              <Form.Label>Encryption Key</Form.Label>\n              <Form.Control\n                onChange={this.handleEncryptKey}\n                placeholder=\"Enter your encryption key\"\n                style={{ width: \"410px\", height: \"30px\" }}\n                type=\"text\"\n              />\n            </Form.Group>\n\n            <Button\n              onClick={this.handleClickEncrypt}\n              style={{ width: \"410px\" }}\n            >\n              Encrypt\n            </Button>\n            <br />\n            <br />\n            <br />\n            <br />\n            <Form.Group controlId=\"formToDecrypt\">\n              <Form.Label>String to be decrypted</Form.Label>\n              <Form.Control\n                onChange={this.handleDecrypt}\n                placeholder=\"Enter your string to decrypt\"\n                style={{ width: \"410px\", height: \"30px\" }}\n                type=\"text\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formDecryptKey\">\n              <Form.Label>Decryption Key</Form.Label>\n              <Form.Control\n                onChange={this.handleDecryptKey}\n                placeholder=\"Enter your decryption key\"\n                style={{ width: \"410px\", height: \"30px\" }}\n                type=\"text\"\n              />\n            </Form.Group>\n\n            <Button\n              onClick={this.handleClickDecrypt}\n              style={{ width: \"410px\" }}\n              variant=\"info\"\n            >\n              Decrypt\n            </Button>\n          </Form>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}